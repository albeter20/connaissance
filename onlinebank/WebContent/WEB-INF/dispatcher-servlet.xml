<beans xmlns="http://www.springframework.org/schema/beans"
				xmlns:context="http://www.springframework.org/schema/context" 
				xmlns:aop="http://www.springframework.org/schema/aop"
				xmlns:tx="http://www.springframework.org/schema/tx"
				xmlns:jee="http://www.springframework.org/schema/jee"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
				xmlns:mvc="http://www.springframework.org/schema/mvc"
				xsi:schemaLocation="http://www.springframework.org/schema/aop
			                        http://www.springframework.org/schema/aop/spring-aop.xsd
			                        http://www.springframework.org/schema/tx
			                        http://www.springframework.org/schema/tx/spring-tx.xsd
							        http://www.springframework.org/schema/beans
							        http://www.springframework.org/schema/beans/spring-beans.xsd
							        http://www.springframework.org/schema/mvc 
							        http://www.springframework.org/schema/mvc/spring-mvc.xsd
							        http://www.springframework.org/schema/context
							        http://www.springframework.org/schema/context/spring-context.xsd
							        http://www.springframework.org/schema/jee 
							        http://www.springframework.org/schema/jee/spring-jee.xsd ">

	<mvc:annotation-driven />
	<context:component-scan base-package="com" />
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		
	</bean>

<!-- 	Application Message Bundle --> 
<!-- 	<bean id="messageSource" -->
<!-- 		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> -->
<!-- 		<property name="basename" value="/WEB-INF/ValidationMessages" /> -->
<!-- 	</bean> -->

<context:component-scan base-package="com" />
	<!-- Add this tag to enable annotations transactions -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager" mode="aspectj" proxy-target-class="true" /> -->
	<aop:aspectj-autoproxy proxy-target-class="true">
		<aop:include name="logAspect"/>
	</aop:aspectj-autoproxy>
	

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="create*" rollback-for="" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by the FooService interface -->
	<aop:config >
		<aop:pointcut id="daoOperation"
			expression="execution(* com.poc.oas.dao.UserDAO.createUser(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="daoOperation" />
	</aop:config>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dbDataSource"></property>
	</bean>
	<jee:jndi-lookup id="dbDataSource" jndi-name="jdbc/BankDB"
		expected-type="javax.sql.DataSource" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dbDataSource" />
	</bean>
	
	<!-- Aspect -->
	<bean id="logAspect" class="com.poc.aspect.LoggingAspect" />
	
	<context:load-time-weaver aspectj-weaving="on" weaver-class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver"/> 

</beans>
