<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/jee 
                        http://www.springframework.org/schema/jee/spring-jee.xsd">

	<context:component-scan base-package="com" />
	<!-- Add this tag to enable annotations transactions -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager" mode="aspectj" proxy-target-class="true" /> -->

    <import resource="dispatcher-servlet.xml" />
	<aop:aspectj-autoproxy proxy-target-class="true">
		<aop:include name="logAspect"/>
	</aop:aspectj-autoproxy>
	

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="create*" rollback-for="" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by the FooService interface -->
	<aop:config >
		<aop:pointcut id="daoOperation"
			expression="execution(* com.poc.oas.dao.UserDAO.createUser(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="daoOperation" />
	</aop:config>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dbDataSource"></property>
	</bean>
	<jee:jndi-lookup id="dbDataSource" jndi-name="jdbc/BankDB"
		expected-type="javax.sql.DataSource" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dbDataSource" />
	</bean>
	
	<!-- Aspect -->
	<bean id="logAspect" class="com.poc.aspect.LoggingAspect" />
	
	<context:load-time-weaver aspectj-weaving="on" weaver-class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver"/> 

</beans>